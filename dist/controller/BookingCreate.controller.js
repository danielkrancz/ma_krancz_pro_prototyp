sap.ui.define(["sap/ui/core/mvc/Controller","sap/ui/model/json/JSONModel","sap/ui/core/Fragment","sap/m/MessageToast","sap/ui/core/routing/History","sap/m/MessageBox","sap/ui/core/Messaging","sap/ui/table/Column","sap/m/Column","sap/m/Label"],(e,t,n,a,i,l,o,r,s,d)=>{"use strict";return e.extend("at.hb.makrancz.procodeapp.controller.BookingCreate",{onInit:function(){this.getOwnerComponent().getRouter().getRoute("BookingCreate").attachPatternMatched(this.onPatternMatched,this);o.registerObject(this.getView(),true)},onPatternMatched:function(e){this.sTravelID=e.getParameters().arguments.TravelID;this.createModel=new t({TravelID:this.sTravelID});this.getView().setModel(this.createModel,"createModel");this.uiModel=new t({supportMultiselect:false,supportRanges:false});this.getView().setModel(this.uiModel,"ui")},onSave:function(){let e=this.getView().getModel("createModel").getData();this.getOwnerComponent().getModel().create(`/Travel('${this.sTravelID}')/to_Booking`,{TravelID:e.TravelID,BookingID:e.BookingID,BookingDate:new Date(e.BookingDate),CustomerID:e.CustomerID,CarrierID:e.CarrierID,ConnectionID:e.ConnectionID,FlightDate:new Date(e.FlightDate),FlightPrice:e.FlightPrice,CurrencyCode:e.CurrencyCode,BookingStatus:e.BookingStatus},{success:e=>{a.show("Successfully saved.");this.getOwnerComponent().getRouter().navTo("BookingDetail",{TravelID:e.TravelID,BookingID:e.BookingID},true)},error:e=>{}})},onNavBack(){const e=i.getInstance();const t=e.getPreviousHash();if(t!==undefined){window.history.go(-1)}else{const e=this.getOwnerComponent().getRouter();e.navTo("RouteMain",{},true)}},onCancel:function(){l.warning("Your entries will be lost when you leave this page.",{actions:["Leave Page","Cancel"],emphasizedAction:"Leave Page",initialFocus:"Cancel",onClose:e=>{if(e==="Leave Page"){this.onNavBack()}}})},onCustomerValueHelpRequested:function(e){this._oInput=e.getSource();this.sVHPath="/CustomerID";n.load({name:"at.hb.makrancz.procodeapp.view.fragment.ValueHelpDialogCustomer",controller:this}).then(function(e){var t=e.getFilterBar();this._oVHD=e;this.getView().addDependent(e);e.setRangeKeyFields([{label:"Customer",key:"CustomerID",type:"string"}]);t.setFilterBarExpanded(false);e.getTableAsync().then(function(t){if(t.bindRows){t.bindAggregation("rows",{path:"/Passenger",events:{dataReceived:function(){e.update()}}});let n=new r({label:new d({text:"Customer ID"}),template:new Text({wrapping:false,text:"{CustomerID}"})});n.data({fieldName:"CustomerID"});let a=new r({label:new d({text:"First Name"}),template:new Text({wrapping:false,text:"{FirstName}"})});a.data({fieldName:"FirstName"});let i=new r({label:new d({text:"Last Name"}),template:new Text({wrapping:false,text:"{LastName}"})});i.data({fieldName:"LastName"});let l=new r({label:new d({text:"Title"}),template:new Text({wrapping:false,text:"{Title}"})});l.data({fieldName:"Title"});let o=new r({label:new d({text:"Street"}),template:new Text({wrapping:false,text:"{Street}"})});o.data({fieldName:"Street"});t.addColumn(n);t.addColumn(a);t.addColumn(i);t.addColumn(l);t.addColumn(o)}if(t.bindItems){t.bindAggregation("items",{path:"/Passenger",template:new ColumnListItem({cells:[new d({text:"{CustomerID}"}),new d({text:"{FirstName}"}),new d({text:"{LastName}"}),new d({text:"{Title}"}),new d({text:"{Street}"})]}),events:{dataReceived:function(){e.update()}}});t.addColumn(new s({header:new d({text:"Customer ID"})}));t.addColumn(new s({header:new d({text:"First Name"})}));t.addColumn(new s({header:new d({text:"Last Name"})}));t.addColumn(new s({header:new d({text:"Title"})}));t.addColumn(new s({header:new d({text:"Steet"})}))}e.update()}.bind(this));e.open()}.bind(this))},onCurrencyValueHelpRequested:function(e){this._oInput=e.getSource();this.sVHPath="/CurrencyCode";n.load({name:"at.hb.makrancz.procodeapp.view.fragment.ValueHelpDialogCurrency",controller:this}).then(function(e){var t=e.getFilterBar();this._oVHD=e;this.getView().addDependent(e);e.setRangeKeyFields([{label:"Currency Code",key:"CurrencyCode",type:"string"}]);t.setFilterBarExpanded(false);e.getTableAsync().then(function(t){if(t.bindRows){t.bindAggregation("rows",{path:"/Currency",events:{dataReceived:function(){e.update()}}});let n=new r({label:new d({text:"Currency"}),template:new Text({wrapping:false,text:"{Currency}"})});n.data({fieldName:"Currency"});let a=new r({label:new d({text:"Description"}),template:new Text({wrapping:false,text:"{Currency_Text}"})});a.data({fieldName:"Currency_Text"});t.addColumn(n);t.addColumn(a)}if(t.bindItems){t.bindAggregation("items",{path:"/Currency",template:new ColumnListItem({cells:[new d({text:"{Currency}"}),new d({text:"{Currency_Text}"})]}),events:{dataReceived:function(){e.update()}}});t.addColumn(new s({header:new d({text:"Currency"})}));t.addColumn(new s({header:new d({text:"Description"})}))}e.update()}.bind(this));e.open()}.bind(this))},onFlightValueHelpRequested:function(e){this.bFlightVH=true;n.load({name:"at.hb.makrancz.procodeapp.view.fragment.ValueHelpDialogFlight",controller:this}).then(function(e){var t=e.getFilterBar();this._oVHD=e;this.getView().addDependent(e);t.setFilterBarExpanded(false);e.getTableAsync().then(function(t){if(t.bindRows){t.bindAggregation("rows",{path:"/Flight",events:{dataReceived:function(){e.update()}}});let n=new r({label:new d({text:"Airline ID"}),template:new Text({wrapping:false,text:"{AirlineID}"})});n.data({fieldName:"AirlineID"});let a=new r({label:new d({text:"Flight Number"}),template:new Text({wrapping:false,text:"{ConnectionID}"})});a.data({fieldName:"ConnectionID"});let i=new r({label:new d({text:"Flight Date"}),template:new Text({wrapping:false,text:"{FlightDate}"})});i.data({fieldName:"FlightDate"});let l=new r({label:new d({text:"Flight Price"}),template:new Text({wrapping:false,text:"{Price}"})});l.data({fieldName:"Price"});let o=new r({label:new d({text:"Plane Type"}),template:new Text({wrapping:false,text:"{PlaneType}"})});o.data({fieldName:"PlaneType"});let s=new r({label:new d({text:"Maximum Seats"}),template:new Text({wrapping:false,text:"{MaximumSeats}"})});s.data({fieldName:"MaximumSeats"});let u=new r({label:new d({text:"Occupied Seats"}),template:new Text({wrapping:false,text:"{Occupied Seats}"})});u.data({fieldName:"OccupiedSeats"});t.addColumn(n);t.addColumn(a);t.addColumn(i);t.addColumn(l);t.addColumn(o);t.addColumn(s);t.addColumn(u)}if(t.bindItems){t.bindAggregation("items",{path:"/Flight",template:new ColumnListItem({cells:[new d({text:"{AirlineID}"}),new d({text:"{ConnectionID}"}),new d({text:"{FlightDate}"}),new d({text:"{Price}"}),new d({text:"{PlaneType}"}),new d({text:"{MaximumSeats}"}),new d({text:"{OccupiedSeats}"})]}),events:{dataReceived:function(){e.update()}}});t.addColumn(new s({header:new d({text:"Airline ID"})}));t.addColumn(new s({header:new d({text:"Flight Number"})}));t.addColumn(new s({header:new d({text:"Flight Date"})}));t.addColumn(new s({header:new d({text:"Price"})}));t.addColumn(new s({header:new d({text:"Plane Type"})}));t.addColumn(new s({header:new d({text:"Maximum Seats"})}));t.addColumn(new s({header:new d({text:"Occupied Seats"})}))}e.update()}.bind(this));e.open()}.bind(this))},onValueHelpOkPress:function(e){if(this.bFlightVH){e.getSource().getTableAsync().then(e=>{let t=e.getContextByIndex(e.getSelectedIndices()[0]).getObject();this.getView().getModel("createModel").setProperty("/CarrierID",t.AirlineID);this.getView().getModel("createModel").setProperty("/ConnectionID",t.ConnectionID);this.getView().getModel("createModel").setProperty("/FlightDate",t.FlightDate);this.getView().getModel("createModel").setProperty("/FlightPrice",t.Price);this.getView().getModel("createModel").setProperty("/CurrencyCode",t.CurrencyCode)})}else{this.getView().getModel("createModel").setProperty(this.sVHPath,e.getParameters().tokens[0].getKey())}this._oVHD.close()},onValueHelpCancelPress:function(){this._oVHD.close()},onValueHelpAfterClose:function(){this._oVHD.destroy()}})});
//# sourceMappingURL=BookingCreate.controller.js.map